rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is a recruiter using token claims
    function isRecruiter() {
      return request.auth != null && 
        (
          // Primary method: Check token claims (preferred and more efficient)
          (request.auth.token.role == "recruiter" || 
           request.auth.token.role == "RECRUITER" ||
           request.auth.token.role == "Recruiter") ||
          
          // Fallback method: Check Firestore document (for backwards compatibility)
          (
            exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
            (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "recruiter" || 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "RECRUITER" ||
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "Recruiter")
          )
        );
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // LENIENT RULES FOR PRODUCTION AND DEVELOPMENT
    // Allow any authenticated user to read all data
    match /{document=**} {
      allow read: if isAuthenticated();
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow users to read/write their own data
      // Allow recruiters to read candidate data AND modify it (more lenient)
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || isRecruiter();
    }
    
    // Roadmaps collection rules - LENIENT VERSION
    match /roadmaps/{roadmapId} {
      // Allow any authenticated user to read roadmaps
      // Allow owners and recruiters to write roadmaps
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isOwner(resource.data.candidateId) || isRecruiter());
      
      // Allow creation of new roadmaps by any authenticated user
      allow create: if isAuthenticated();
    }
    
    // Debug tests collection - allow authenticated users to read/write for testing
    match /debug_tests/{testId} {
      allow read, write: if isAuthenticated();
    }
    
    // Recruiter-only test collection - any authenticated user can access (more lenient)
    match /recruiter_only_test/{testId} {
      allow read, write: if isAuthenticated();
    }
    
    // Contact form submissions - anyone can create, any authenticated user can read
    match /contact_submissions/{submissionId} {
      allow create: if true;
      allow read, update, delete: if isAuthenticated();
    }
  }
}