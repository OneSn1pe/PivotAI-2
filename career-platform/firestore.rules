rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is a recruiter
    function isRecruiter() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "recruiter" || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "RECRUITER");
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow users to read/write their own data
      // Allow recruiters to read candidate data, but not modify it
      allow read: if isOwner(userId) || isRecruiter();
      allow write: if isOwner(userId);
    }
    
    // Roadmaps collection rules - explicitly expanded for clarity
    match /roadmaps/{roadmapId} {
      // Allow owners to read/write their own roadmaps
      // Allow recruiters to read ALL roadmaps, but not modify them
      allow read: if isRecruiter() || 
                   (resource != null && 
                    resource.data != null && 
                    resource.data.candidateId != null && 
                    isOwner(resource.data.candidateId));
      
      allow write: if resource != null && 
                    resource.data != null && 
                    resource.data.candidateId != null && 
                    isOwner(resource.data.candidateId);
    }
    
    // Enable read access for all authenticated users
    match /{document=**} {
      allow read: if request.auth != null;
      // Still restrict writes to appropriate owners
    }
    
    // Contact form submissions - anyone can create, only admins can read
    // match /contact_submissions/{submissionId} {
    //   allow create: if true;
    //   allow read, update, delete: if request.auth != null && 
    //     exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
    //     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "ADMIN";
    // }
  }
}