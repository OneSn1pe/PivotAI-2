rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Development mode check - for more permissive rules in dev
    function isDevelopmentMode() {
      // This is a simplified check - in production this will be false
      return true; // Set to true for local development
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow users to read/write their own data
      allow read, write: if isOwner(userId) || isDevelopmentMode();
    }
    
    // Roadmaps collection rules
    match /roadmaps/{roadmapId} {
      // Allow operations on roadmaps during development
      allow read, write, delete: if isDevelopmentMode() || 
        (request.auth != null && resource != null && resource.data.candidateId == request.auth.uid);
      
      // Allow creation of new roadmaps
      allow create: if isDevelopmentMode() || request.auth != null;
    }
    
    // Debug tests collection - allow authenticated users to read/write for testing
    match /debug_tests/{testId} {
      allow read, write: if request.auth != null;
    }
    
    // For development mode, uncomment this rule to allow all access (for testing)
    // match /{document=**} {
    //   allow read, write: if true;
    // }
    
    // Contact form submissions - anyone can create, only admins can read
    // match /contact_submissions/{submissionId} {
    //   allow create: if true;
    //   allow read, update, delete: if request.auth != null && 
    //     exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
    //     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "ADMIN";
    // }
  }
}